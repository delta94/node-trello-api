{"version":3,"sources":["../src/index.js"],"names":["app","db","connect","MONGODB_URI","useNewUrlParser","useCreateIndex","mongoose","set","use","bodyParser","urlencoded","extended","json","exposedHeaders","express","static","path","join","__dirname","get","req","res","msg","upload","users","posts","auth","role","board","list","card","checklist","LISTEING_PORT","process","env","now","listen","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AAEA;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMA,MAAM,wBAAZ;;AAEA;AACAC,YAAGC,OAAH,CAAWC,mBAAX,EAAwB;AACtBC,mBAAiB,IADK;AAEtBC,kBAAgB;AAFM,CAAxB;;AAKAC,mBAASC,GAAT,CAAa,kBAAb,EAAiC,KAAjC;;AAEA;AACAP,IAAIQ,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAX,IAAIQ,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;;AAEAZ,IAAIQ,GAAJ,CACE,oBAAK;AACHK,kBAAgB;AADb,CAAL,CADF;;AAMAb,IAAIQ,GAAJ,CAAQ,aAAR,EAAuBM,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAvB;;AAEAlB,IAAIQ,GAAJ,CAAQ,cAAR,EAAwBM,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAf,CAAxB;;AAEA;;AAEAlB,IAAImB,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,IAAIT,IAAJ,CAAS,EAAEU,KAAK,QAAP,EAAT,CAAd;AAAA,CAAlB;AACAtB,IAAImB,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,IAAIT,IAAJ,CAAS,EAAEU,KAAK,cAAP,EAAT,CAAd;AAAA,CAAxB;;AAEAtB,IAAIQ,GAAJ,CAAQ,aAAR,EAAuBe,gBAAvB;;AAEA;AACAvB,IAAIQ,GAAJ,CAAQ,WAAR,EAAqBgB,eAArB;AACAxB,IAAIQ,GAAJ,CAAQ,YAAR,EAAsBiB,eAAtB;AACAzB,IAAIQ,GAAJ,CAAQ,WAAR,EAAqBkB,cAArB;AACA1B,IAAIQ,GAAJ,CAAQ,WAAR,EAAqBmB,cAArB;AACA3B,IAAIQ,GAAJ,CAAQ,YAAR,EAAsBoB,eAAtB;AACA5B,IAAIQ,GAAJ,CAAQ,WAAR,EAAqBqB,cAArB;AACA7B,IAAIQ,GAAJ,CAAQ,WAAR,EAAqBsB,cAArB;AACA9B,IAAIQ,GAAJ,CAAQ,gBAAR,EAA0BuB,mBAA1B;;AAEA,IAAMC,gBAAgBC,QAAQC,GAAR,CAAYC,GAAZ,IAAmB,IAAzC;AACA;AACAnC,IAAIoC,MAAJ,CAAWJ,aAAX,EAA0B;AAAA,SACxBK,QAAQC,GAAR,gCAAyCN,aAAzC,CADwB;AAAA,CAA1B","file":"index.js","sourcesContent":["import express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport mongoose from 'mongoose'\nimport path from 'path'\n\nimport 'express-async-errors'\n\nimport { PORT, MONGODB_URI } from './config/config'\nimport { db } from './db/connect'\n\nimport users from './routes/api/users'\nimport posts from './routes/api/posts'\nimport auth from './routes/api/auth'\nimport role from './routes/api/role'\nimport board from './routes/api/board'\nimport list from './routes/api/list'\nimport card from './routes/api/card'\nimport checklist from './routes/api/checklist'\nimport upload from './routes/api/upload'\n\n// Initialize express\nconst app = express()\n\n// Connect DB\ndb.connect(MONGODB_URI, {\n  useNewUrlParser: true,\n  useCreateIndex: true\n})\n\nmongoose.set('useFindAndModify', false)\n\n// Initialize body parser\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(bodyParser.json())\n\napp.use(\n  cors({\n    exposedHeaders: 'x-auth-token'\n  })\n)\n\napp.use('/api/static', express.static(path.join(__dirname, './static/')))\n\napp.use('/api/uploads', express.static(path.join(__dirname, './uploads/')))\n\n// Upload route\n\napp.get('/hello', (req, res) => res.json({ msg: 'Hellow' }))\napp.get(\"/hello-there\", (req, res) => res.json({ msg: \"Hellow-there\" }));\n\napp.use('/api/upload', upload)\n\n// // Apis\napp.use('/api/user', users)\napp.use('/api/posts', posts)\napp.use('/api/auth', auth)\napp.use('/api/role', role)\napp.use('/api/board', board)\napp.use('/api/list', list)\napp.use('/api/card', card)\napp.use('/api/checklist', checklist)\n\nconst LISTEING_PORT = process.env.now || 3900\n// Listen server\napp.listen(LISTEING_PORT, () =>\n  console.log(`Backend listening on port ${LISTEING_PORT}`)\n);\n"]}
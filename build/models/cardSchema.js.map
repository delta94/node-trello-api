{"version":3,"sources":["../../src/models/cardSchema.js"],"names":["cardSchema","mongoose","Schema","name","type","String","minlength","maxlength","required","closed","Boolean","default","desc","idBoard","Types","ObjectId","ref","idChecklists","idList","idMembers","Card","model","cardValidate","card","schema","Joi","string","min","max","validate"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,aAAa,IAAIC,mBAASC,MAAb,CAAoB;AACrCC,QAAM;AACJC,UAAMC,MADF;AAEJC,eAAW,CAFP;AAGJC,eAAW,GAHP;AAIJC,cAAU;AAJN,GAD+B;AAOrCC,UAAQ;AACNL,UAAMM,OADA;AAENC,aAAS;AAFH,GAP6B;AAWrCC,QAAM;AACJR,UAAMC,MADF;AAEJC,eAAW,CAFP;AAGJC,eAAW;AAHP,GAX+B;AAgBrCM,WAAS;AACPT,UAAMH,mBAASC,MAAT,CAAgBY,KAAhB,CAAsBC,QADrB;AAEPC,SAAK;AAFE,GAhB4B;AAoBrCC,gBAAc,CACZ,EAACb,MAAMH,mBAASC,MAAT,CAAgBY,KAAhB,CAAsBC,QAA7B,EAAuCC,KAAK,WAA5C,EADY,CApBuB;AAuBrCE,UAAQ;AACNd,UAAMH,mBAASC,MAAT,CAAgBY,KAAhB,CAAsBC,QADtB;AAENC,SAAK;AAFC,GAvB6B;AA2BrCG,aAAW,CACT;AACEf,UAAMH,mBAASC,MAAT,CAAgBY,KAAhB,CAAsBC,QAD9B;AAEEC,SAAK;AAFP,GADS;AA3B0B,CAApB,CAAnB;;AAmCA,IAAMI,OAAOnB,mBAASoB,KAAT,CAAe,MAAf,EAAuBrB,UAAvB,CAAb;;AAGA,IAAMsB,eAAe,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC7B,MAAMC,SAAS;AACbrB,UAAMsB,cAAIC,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,EAA6BpB,QAA7B,EADO;AAEbI,UAAMa,cAAIC,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB;AAFO,GAAf;;AAKA,SAAOH,cAAII,QAAJ,CAAaN,IAAb,EAAmBC,MAAnB,CAAP;AACD,CAPD;;QASSJ,I,GAAAA,I;QAAME,Y,GAAAA,Y","file":"cardSchema.js","sourcesContent":["import mongoose from 'mongoose';\nimport Joi from 'joi';\n\nconst cardSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    minlength: 2,\n    maxlength: 150,\n    required: true\n  },\n  closed: {\n    type: Boolean,\n    default: false\n  },\n  desc: {\n    type: String,\n    minlength: 5,\n    maxlength: 300,\n  },\n  idBoard: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Board'\n  },\n  idChecklists: [\n    {type: mongoose.Schema.Types.ObjectId, ref: 'Checklist'}\n  ],\n  idList: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'List'\n  },\n  idMembers: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'User'\n    }\n  ]\n});\n\nconst Card = mongoose.model('card', cardSchema);\n\n\nconst cardValidate = (card) => {\n  const schema = {\n    name: Joi.string().min(2).max(150).required(),\n    desc: Joi.string().min(5).max(300),\n  }\n\n  return Joi.validate(card, schema);\n};\n\nexport { Card, cardValidate };\n"]}
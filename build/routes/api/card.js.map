{"version":3,"sources":["../../../src/routes/api/card.js"],"names":["router","express","Router","post","auth","req","res","body","name","idBoard","idList","Card","create","card","List","findById","list","Board","board","actions","push","action","data","_id","save","status","send","id","boardId","console","log","deleteMany","populate","path","model","item"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AAGA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,0BAAvB;AAAA,2FAA6B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACOD,GAAG,CAACE,IADX,EACnBC,IADmB,aACnBA,IADmB,EACbC,OADa,aACbA,OADa,EACJC,MADI,aACJA,MADI;AAAA;AAAA,mBAGRC,iBAAKC,MAAL,CAAY;AAC7BJ,cAAAA,IAAI,EAAJA,IAD6B;AACvBC,cAAAA,OAAO,EAAPA,OADuB;AACdC,cAAAA,MAAM,EAANA;AADc,aAAZ,CAHQ;;AAAA;AAGrBG,YAAAA,IAHqB;AAAA;AAAA,mBAOVC,iBAAKC,QAAL,CAAcL,MAAd,CAPU;;AAAA;AAOvBM,YAAAA,IAPuB;AAAA;AAAA,mBASTC,mBAAMF,QAAN,CAAeN,OAAf,CATS;;AAAA;AASvBS,YAAAA,KATuB;AAU3BA,YAAAA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB;AACjBC,cAAAA,MAAM,EAAE,YADS;AAEjBC,cAAAA,IAAI,EAAE;AACJT,gBAAAA,IAAI,EAAE;AACJL,kBAAAA,IAAI,EAAEK,IAAI,CAACL,IADP;AAEJe,kBAAAA,GAAG,EAAEV,IAAI,CAACU;AAFN,iBADF;AAKJP,gBAAAA,IAAI,EAAE;AACJR,kBAAAA,IAAI,EAAEQ,IAAI,CAACR,IADP;AAEJe,kBAAAA,GAAG,EAAEP,IAAI,CAACO;AAFN;AALF;AAFW,aAAnB;AAV2B;AAAA,mBAuBrBL,KAAK,CAACM,IAAN,EAvBqB;;AAAA;AAyB3BlB,YAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBb,IAArB;;AAzB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA,K,CA4BA;;AACAb,MAAM,UAAN,CAAc,SAAd,EAAyBI,0BAAzB;AAAA,4FAA+B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACLD,GAAG,CAACE,IADC,EACrBoB,EADqB,cACrBA,EADqB,EACjBC,OADiB,cACjBA,OADiB;AAE7BC,YAAAA,OAAO,CAACC,GAAR,CAAYzB,GAAG,CAACE,IAAhB;AAF6B;AAAA,mBAGvBI,iBAAKoB,UAAL,CAAgB;AAACrB,cAAAA,MAAM,EAAEiB;AAAT,aAAhB,CAHuB;;AAAA;AAAA;AAAA,mBAIXV,mBAAMF,QAAN,CAAea,OAAO,CAACD,EAAvB,EAA2BK,QAA3B,CAAoC;AACpDC,cAAAA,IAAI,EAAE,OAD8C;AAEpDC,cAAAA,KAAK,EAAEpB;AAF6C,aAApC,CAJW;;AAAA;AAIzBI,YAAAA,KAJyB;AASvBC,YAAAA,OATuB,GASb,oBAAOD,KAAK,CAACC,OAAb,EAAuB,UAAAgB,IAAI;AAAA,qBAAIA,IAAI,CAACb,IAAL,CAAUN,IAAV,CAAeO,GAAf,KAAuBI,EAA3B;AAAA,aAA3B,CATa;AAU7BT,YAAAA,KAAK,CAACC,OAAN,GAAgBA,OAAhB;AAV6B;AAAA,mBAYvBD,KAAK,CAACM,IAAN,EAZuB;;AAAA;AAc7BlB,YAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBR,KAArB;;AAd6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;eAkBelB,M","sourcesContent":["import express from 'express';\nimport { remove } from 'lodash';\n\n\nimport auth from '../../middleware/authMiddleware';\nimport { Card } from '../../models/cardSchema';\nimport { Board } from '../../models/boardSchema';\nimport { List } from '../../models/listSchema';\n\n\nconst router = express.Router();\n\nrouter.post('/create', auth, async (req, res) => {\n  const { name, idBoard, idList } = req.body;\n\n  const card = await Card.create({\n    name, idBoard, idList\n  });\n\n  let list = await List.findById(idList);\n\n  let board = await Board.findById(idBoard);\n  board.actions.push({\n    action: 'createcard',\n    data: {\n      card: {\n        name: card.name,\n        _id: card._id\n      },\n      list: {\n        name: list.name,\n        _id: list._id\n      },\n    }\n  });\n  await board.save();\n\n  res.status(200).send(card);\n});\n\n// Delete card\nrouter.delete('/delete', auth, async (req, res) => {\n  const { id, boardId } = req.body;\n  console.log(req.body);\n  await Card.deleteMany({idList: id});\n  let board = await Board.findById(boardId.id).populate({\n    path: 'lists',\n    model: List,\n  });\n\n  const actions = remove(board.actions, (item => item.data.list._id === id));\n  board.actions = actions;\n\n  await board.save();\n\n  res.status(200).send(board);\n\n});\n\nexport default router;\n"],"file":"card.js"}
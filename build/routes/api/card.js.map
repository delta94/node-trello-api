{"version":3,"sources":["../../../src/routes/api/card.js"],"names":["router","express","Router","post","auth","req","res","body","name","idBoard","idList","Card","create","card","List","findById","list","Board","board","actions","push","action","data","_id","save","status","send","delete","id","boardId","console","log","deleteMany","populate","path","model","item"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;AAGA;;;;AACA;;AACA;;AACA;;;;AAGA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,IAAP,CAAY,SAAZ,EAAuBC,wBAAvB;AAAA,sFAA6B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACOD,IAAIE,IADX,EACnBC,IADmB,aACnBA,IADmB,EACbC,OADa,aACbA,OADa,EACJC,MADI,aACJA,MADI;AAAA;AAAA,mBAGRC,iBAAKC,MAAL,CAAY;AAC7BJ,wBAD6B,EACvBC,gBADuB,EACdC;AADc,aAAZ,CAHQ;;AAAA;AAGrBG,gBAHqB;AAAA;AAAA,mBAOVC,iBAAKC,QAAL,CAAcL,MAAd,CAPU;;AAAA;AAOvBM,gBAPuB;AAAA;AAAA,mBASTC,mBAAMF,QAAN,CAAeN,OAAf,CATS;;AAAA;AASvBS,iBATuB;;AAU3BA,kBAAMC,OAAN,CAAcC,IAAd,CAAmB;AACjBC,sBAAQ,YADS;AAEjBC,oBAAM;AACJT,sBAAM;AACJL,wBAAMK,KAAKL,IADP;AAEJe,uBAAKV,KAAKU;AAFN,iBADF;AAKJP,sBAAM;AACJR,wBAAMQ,KAAKR,IADP;AAEJe,uBAAKP,KAAKO;AAFN;AALF;AAFW,aAAnB;AAV2B;AAAA,mBAuBrBL,MAAMM,IAAN,EAvBqB;;AAAA;;AAyB3BlB,gBAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBb,IAArB;;AAzB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;;AA4BA;AACAb,OAAO2B,MAAP,CAAc,SAAd,EAAyBvB,wBAAzB;AAAA,uFAA+B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACLD,IAAIE,IADC,EACrBqB,EADqB,cACrBA,EADqB,EACjBC,OADiB,cACjBA,OADiB;;AAE7BC,oBAAQC,GAAR,CAAY1B,IAAIE,IAAhB;AAF6B;AAAA,mBAGvBI,iBAAKqB,UAAL,CAAgB,EAACtB,QAAQkB,EAAT,EAAhB,CAHuB;;AAAA;AAAA;AAAA,mBAIXX,mBAAMF,QAAN,CAAec,QAAQD,EAAvB,EAA2BK,QAA3B,CAAoC;AACpDC,oBAAM,OAD8C;AAEpDC,qBAAOrB;AAF6C,aAApC,CAJW;;AAAA;AAIzBI,iBAJyB;AASvBC,mBATuB,GASb,oBAAOD,MAAMC,OAAb,EAAuB;AAAA,qBAAQiB,KAAKd,IAAL,CAAUN,IAAV,CAAeO,GAAf,KAAuBK,EAA/B;AAAA,aAAvB,CATa;;AAU7BV,kBAAMC,OAAN,GAAgBA,OAAhB;;AAV6B;AAAA,mBAYvBD,MAAMM,IAAN,EAZuB;;AAAA;;AAc7BlB,gBAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBR,KAArB;;AAd6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;;kBAkBelB,M","file":"card.js","sourcesContent":["import express from 'express';\nimport { remove } from 'lodash';\n\n\nimport auth from '../../middleware/authMiddleware';\nimport { Card } from '../../models/cardSchema';\nimport { Board } from '../../models/boardSchema';\nimport { List } from '../../models/listSchema';\n\n\nconst router = express.Router();\n\nrouter.post('/create', auth, async (req, res) => {\n  const { name, idBoard, idList } = req.body;\n\n  const card = await Card.create({\n    name, idBoard, idList\n  });\n\n  let list = await List.findById(idList);\n\n  let board = await Board.findById(idBoard);\n  board.actions.push({\n    action: 'createcard',\n    data: {\n      card: {\n        name: card.name,\n        _id: card._id\n      },\n      list: {\n        name: list.name,\n        _id: list._id\n      },\n    }\n  });\n  await board.save();\n\n  res.status(200).send(card);\n});\n\n// Delete card\nrouter.delete('/delete', auth, async (req, res) => {\n  const { id, boardId } = req.body;\n  console.log(req.body);\n  await Card.deleteMany({idList: id});\n  let board = await Board.findById(boardId.id).populate({\n    path: 'lists',\n    model: List,\n  });\n\n  const actions = remove(board.actions, (item => item.data.list._id === id));\n  board.actions = actions;\n\n  await board.save();\n\n  res.status(200).send(board);\n\n});\n\nexport default router;\n"]}
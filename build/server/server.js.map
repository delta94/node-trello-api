{"version":3,"sources":["../../src/server/server.js"],"names":["app","db","connect","MONGODB_URI","useNewUrlParser","useCreateIndex","mongoose","set","use","bodyParser","urlencoded","extended","json","exposedHeaders","express","path","join","__dirname","get","req","res","msg","upload","users","posts","auth","role","board","list","card","checklist","LISTEING_PORT","process","env","now","listen","console","log","PORT"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;AACA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;;AACAC,YAAGC,OAAH,CAAWC,mBAAX,EAAwB;AACtBC,EAAAA,eAAe,EAAE,IADK;AAEtBC,EAAAA,cAAc,EAAE;AAFM,CAAxB;;AAKAC,qBAASC,GAAT,CAAa,kBAAb,EAAiC,KAAjC,E,CAEA;;;AACAP,GAAG,CAACQ,GAAJ,CAAQC,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAX,GAAG,CAACQ,GAAJ,CAAQC,uBAAWG,IAAX,EAAR;AAEAZ,GAAG,CAACQ,GAAJ,CACE,sBAAK;AACHK,EAAAA,cAAc,EAAE;AADb,CAAL,CADF;AAMAb,GAAG,CAACQ,GAAJ,CAAQ,aAAR,EAAuBM,8BAAeC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAf,CAAvB;AAEAjB,GAAG,CAACQ,GAAJ,CAAQ,cAAR,EAAwBM,8BAAeC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,gBAArB,CAAf,CAAxB,E,CAEA;;AAEAjB,GAAG,CAACkB,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACR,IAAJ,CAAS;AAAES,IAAAA,GAAG,EAAE;AAAP,GAAT,CAAd;AAAA,CAAlB;AAEArB,GAAG,CAACQ,GAAJ,CAAQ,aAAR,EAAuBc,kBAAvB,E,CAEA;;AACAtB,GAAG,CAACQ,GAAJ,CAAQ,WAAR,EAAqBe,iBAArB;AACAvB,GAAG,CAACQ,GAAJ,CAAQ,YAAR,EAAsBgB,iBAAtB;AACAxB,GAAG,CAACQ,GAAJ,CAAQ,WAAR,EAAqBiB,gBAArB;AACAzB,GAAG,CAACQ,GAAJ,CAAQ,WAAR,EAAqBkB,gBAArB;AACA1B,GAAG,CAACQ,GAAJ,CAAQ,YAAR,EAAsBmB,iBAAtB;AACA3B,GAAG,CAACQ,GAAJ,CAAQ,WAAR,EAAqBoB,gBAArB;AACA5B,GAAG,CAACQ,GAAJ,CAAQ,WAAR,EAAqBqB,gBAArB;AACA7B,GAAG,CAACQ,GAAJ,CAAQ,gBAAR,EAA0BsB,qBAA1B;AAEA,IAAMC,aAAa,GAAGC,OAAO,CAACC,GAAR,CAAYC,GAAZ,IAAmB,IAAzC,C,CACA;;AACAlC,GAAG,CAACmC,MAAJ,CAAWJ,aAAX,EAA0B;AAAA,SACxBK,OAAO,CAACC,GAAR,qCAAyCC,YAAzC,EADwB;AAAA,CAA1B","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport mongoose from 'mongoose';\nimport path from 'path';\nimport multer from 'multer';\n\nimport 'express-async-errors';\n\nimport { PORT, MONGODB_URI } from '../config/config';\nimport { db } from '../db/connect';\n\nimport users from '../routes/api/users';\nimport posts from '../routes/api/posts';\nimport auth from '../routes/api/auth';\nimport role from '../routes/api/role';\nimport board from '../routes/api/board';\nimport list from '../routes/api/list';\nimport card from '../routes/api/card';\nimport checklist from '../routes/api/checklist';\nimport upload from '../routes/api/upload';\n\n\n// Initialize express\nconst app = express();\n\n// Connect DB\ndb.connect(MONGODB_URI, {\n  useNewUrlParser: true,\n  useCreateIndex: true,\n});\n\nmongoose.set(\"useFindAndModify\", false);\n\n// Initialize body parser\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\napp.use(\n  cors({\n    exposedHeaders: 'x-auth-token',\n  })\n);\n\napp.use(\"/api/static\", express.static(path.join(__dirname, \"../static/\")));\n\napp.use(\"/api/uploads\", express.static(path.join(__dirname, \"../../uploads/\")));\n\n// Upload route\n\napp.get(\"/hello\", (req, res) => res.json({ msg: \"Hellow\" }));\n\napp.use('/api/upload', upload);\n\n// Apis\napp.use('/api/user', users);\napp.use('/api/posts', posts);\napp.use('/api/auth', auth);\napp.use('/api/role', role);\napp.use('/api/board', board);\napp.use('/api/list', list);\napp.use('/api/card', card);\napp.use('/api/checklist', checklist);\n\nconst LISTEING_PORT = process.env.now || 3900;\n// Listen server\napp.listen(LISTEING_PORT, () =>\n  console.log(`Backend listening on port ${PORT}`)\n);\n"],"file":"server.js"}